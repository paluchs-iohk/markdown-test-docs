name: Generate and Deploy Documentation to Pages

on:
  push:
    branches: [ main ]
    paths:
      - "src/**/*.test.js"
      - "src/**/*.test.ts"
      - ".github/workflows/docs-pages.yml"
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Generate Test Documentation with GitHub Links
        run: |
          node src/markdown-docs.cjs \
            --source ./src \
            --output ./docs \
            --github-url ${{ github.server_url }}/${{ github.repository }} \
            --github-branch ${{ github.ref_name }} \
            --repository-root ./
      
      - name: Create index.html for GitHub Pages
        run: |
          cat > docs/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8">
              <title>Test Documentation</title>
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <style>
                  body { 
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif; 
                      line-height: 1.6; 
                      max-width: 1200px; 
                      margin: 0 auto; 
                      padding: 20px; 
                      color: #333; 
                  }
                  .header { 
                      text-align: center; 
                      margin-bottom: 2rem; 
                      padding: 2rem; 
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
                      color: white; 
                      border-radius: 10px; 
                  }
                  .nav-links { 
                      display: flex; 
                      gap: 1rem; 
                      justify-content: center; 
                      flex-wrap: wrap; 
                      margin: 2rem 0; 
                  }
                  .nav-link { 
                      background: #f8f9fa; 
                      padding: 1rem 1.5rem; 
                      border-radius: 8px; 
                      text-decoration: none; 
                      color: #495057; 
                      border: 2px solid #e9ecef; 
                      transition: all 0.3s ease; 
                  }
                  .nav-link:hover { 
                      background: #e9ecef; 
                      border-color: #667eea; 
                  }
                  .nav-link.primary { 
                      background: #667eea; 
                      color: white; 
                      border-color: #667eea; 
                  }
                  .nav-link.primary:hover { 
                      background: #5a6fd8; 
                  }
                  .footer { 
                      text-align: center; 
                      margin-top: 3rem; 
                      padding: 2rem; 
                      background: #f8f9fa; 
                      border-radius: 10px; 
                      color: #6c757d; 
                  }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>üß™ Test Documentation</h1>
                  <p>Automatically generated documentation for all test files</p>
              </div>
              
              <div class="nav-links">
                  <a href="README.html" class="nav-link primary">üìã Documentation Index</a>
                  <a href="ALL_TESTS.html" class="nav-link">üìä All Tests Overview</a>
                  <a href="https://github.com/${{ github.repository }}" class="nav-link">üîó View Source Code</a>
              </div>
              
              <div class="footer">
                  <p>Generated on $(date) by <a href="https://github.com/${{ github.repository }}">Markdown Test Documentation Generator</a></p>
                  <p>üìö This documentation includes direct links to source code on GitHub</p>
              </div>
          </body>
          </html>
          EOF
      
      - name: Convert markdown files to HTML (for better GitHub Pages experience)
        run: |
          # Create simple HTML versions of markdown files for better navigation
          for md_file in docs/*.md; do
            if [ -f "$md_file" ]; then
              html_file="${md_file%.md}.html"
              cat > "$html_file" << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <title>Test Documentation</title>
              <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.2.0/github-markdown-light.min.css">
              <style>
                  .markdown-body { box-sizing: border-box; min-width: 200px; max-width: 980px; margin: 0 auto; padding: 45px; }
                  .nav-header { background: #f6f8fa; padding: 1rem; margin: -45px -45px 2rem -45px; border-bottom: 1px solid #d1d9e0; }
                  .nav-links { display: flex; gap: 1rem; align-items: center; flex-wrap: wrap; }
                  .nav-link { text-decoration: none; color: #0969da; padding: 0.5rem 1rem; border: 1px solid transparent; border-radius: 6px; }
                  .nav-link:hover { background: #f3f4f6; border-color: #d1d9e0; }
              </style>
          </head>
          <body class="markdown-body">
              <div class="nav-header">
                  <div class="nav-links">
                      <a href="index.html" class="nav-link">üè† Home</a>
                      <a href="README.html" class="nav-link">üìã Index</a>
                      <a href="ALL_TESTS.html" class="nav-link">üìä All Tests</a>
                  </div>
              </div>
          EOF
              # Use a simple markdown-to-HTML converter or just include the markdown as-is
              echo '<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>' >> "$html_file"
              echo '<div id="content"></div>' >> "$html_file"
              echo '<script>' >> "$html_file"
              echo 'fetch("'$(basename "$md_file")'").then(response => response.text()).then(text => {' >> "$html_file"
              echo '  document.getElementById("content").innerHTML = marked.parse(text);' >> "$html_file"
              echo '});' >> "$html_file"
              echo '</script>' >> "$html_file"
              echo '</body></html>' >> "$html_file"
            fi
          done
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
